/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Graphics;
import java.io.DataOutputStream;
import java.net.Socket;
import java.util.ArrayList;

/**
 *
 * @author User
 */
public class Barra extends javax.swing.JPanel implements Runnable {

    ArrayList<String> tramas;
    /**
     * Creates new form Barra
     */
    int x = getWidth() / 2;

    public Barra() {
        initComponents();

    }

    public void iniciar() {

        Thread hilo = new Thread(this);
        hilo.start();
    }

    public void enviar(ArrayList<String> tramas) {
        this.tramas = tramas;
    }

    public void paint(Graphics g) {
        g.setColor(getBackground());
        g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(new Color(51,255,102));
        g.fillRect(x, 0, 50, getWidth());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 679, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void run() {
        System.out.println(getWidth() + "   " + getHeight() + "   " + x);

        try {
            for (String valor : tramas) {

                Socket sock = new Socket("192.168.100.17", 555);
                while (x < getWidth()) {
                    Thread.sleep(15);
                    x += 10;
                    repaint();

                }
                x = 0;
                DataOutputStream salida = new DataOutputStream(sock.getOutputStream());//Se crea un flujo de salida de bytes con la direccion del socket
                salida.writeUTF(valor);//Se envia el texto en binario
                salida.close();//Se cierra la conexion
            }
        } catch (Exception e) {
            System.out.println(e);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
